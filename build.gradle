plugins {
  id 'me.champeau.gradle.jmh' version '0.5.2'
}

repositories {
    mavenCentral()
}

configurations {
	all*.exclude group: 'javax.mail'	// avoid duplicate between com.sun.mail in commons-email and javax.mail in commons-test
}

dependencies {
    implementation 'org.dstadler:commons-dost:1.1.0.1'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-email:1.5'
	implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'

    // for IntelliJ JMH support
    jmh 'org.openjdk.jmh:jmh-core:1.35'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.35'

    testCompile('org.dstadler:commons-test:1.0.0.20') {
        // don't drag in JUnit 4
        exclude group: 'junit', module: 'junit'
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.9.0'
}

jmh {
    // see https://github.com/melix/jmh-gradle-plugin
    jmhVersion = '1.35'
    iterations = 1
    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt")
    resultFormat = 'JSON'

    // newer JMH-Gradle plugin reported a duplicate file...
    duplicateClassesStrategy = 'warn'
}

// see https://github.com/melix/jmh-gradle-plugin/issues/6
tasks.getByName('jmhJar').doFirst() {duplicatesStrategy(DuplicatesStrategy.EXCLUDE)}

wrapper {
    gradleVersion= '6.9.2'
}

task adjustWrapperPropertiesFile {
    doLast {
        ant.replaceregexp(match: '^#.*', replace: '', flags: 'g', byline: true) {
            fileset(dir: project.projectDir, includes: 'gradle/wrapper/gradle-wrapper.properties')
        }
        new File(project.projectDir, 'gradle/wrapper/gradle-wrapper.properties').with {
            it.text = it.readLines().findAll { it }.sort().join('\n')
        }
        ant.fixcrlf(file: 'gradle/wrapper/gradle-wrapper.properties', eol: 'lf')
    }
}
wrapper.finalizedBy adjustWrapperPropertiesFile


task publishResults(type:JavaExec) {
    description = 'Publishes results after the benchmark runs, stores results in a directory and sends out an email'

    main = 'org.apache.poi.benchmark.PublishResults'
    classpath = sourceSets.jmh.runtimeClasspath
}

task processResults(type:JavaExec) {
    description = 'Post-processes results to charts'

    main = 'org.apache.poi.benchmark.ProcessResults'
    classpath = sourceSets.jmh.runtimeClasspath
}

processResults.mustRunAfter publishResults

