# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.BuildBenchmarks.benchmarkCompileAll

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 41963.604 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkHSSFPerformance

# Run progress: 10.00% complete, ETA 00:07:43
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 748.163 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkSXSSFPerformance

# Run progress: 20.00% complete, ETA 00:04:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 1530.433 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkXSSFPerformance

# Run progress: 30.00% complete, ETA 00:02:37
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 3035.543 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestExcelant

# Run progress: 40.00% complete, ETA 00:01:56
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 10451.947 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 3 hr per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestIntegration

# Run progress: 50.00% complete, ETA 00:01:34
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 274797.749 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestMain

# Run progress: 60.00% complete, ETA 00:04:09
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: <failure>

java.io.IOException: Log-Tail: 
Log: M D SF: Switch statement found in org.apache.poi.ss.formula.functions.LookupUtils.binarySearchIndexOfValue(LookupUtils$LookupValueComparer, LookupUtils$ValueVector, LookupUtils$MatchMode, boolean) where default case is missing  At LookupUtils.java:[lines 761-785]
    Log: M V EI: org.apache.poi.hssf.usermodel.HSSFChart$HSSFSeries.getDataName() may expose internal representation by returning HSSFChart$HSSFSeries.dataName  At HSSFChart.java:[line 1033]
    Log: M V EI: org.apache.poi.hssf.usermodel.HSSFChart$HSSFSeries.getSeries() may expose internal representation by returning HSSFChart$HSSFSeries.series  At HSSFChart.java:[line 1061]
    Log: M V EI: org.apache.poi.hssf.usermodel.HSSFChart$HSSFSeries.getDataValues() may expose internal representation by returning HSSFChart$HSSFSeries.dataValues  At HSSFChart.java:[line 1040]
    Log: M V EI: org.apache.poi.hssf.usermodel.HSSFChart$HSSFSeries.getDataSecondaryCategoryLabels() may expose internal representation by returning HSSFChart$HSSFSeries.dataSecondaryCategoryLabels  At HSSFChart.java:[line 1054]
    Log: M V EI: org.apache.poi.hssf.usermodel.HSSFChart$HSSFSeries.getDataCategoryLabels() may expose internal representation by returning HSSFChart$HSSFSeries.dataCategoryLabels  At HSSFChart.java:[line 1047]
    Log: M V EI2: new org.apache.poi.hssf.usermodel.EscherGraphics(HSSFShapeGroup, HSSFWorkbook, Color, float) may expose internal representation by storing an externally mutable object into EscherGraphics.escherGroup  At EscherGraphics.java:[line 82]
    Log: M V EI2: new org.apache.poi.hssf.usermodel.EscherGraphics(HSSFShapeGroup, HSSFWorkbook, Color, float) may expose internal representation by storing an externally mutable object into EscherGraphics.workbook  At EscherGraphics.java:[line 83]
    Log: M V EI: org.apache.poi.hssf.extractor.ExcelExtractor.getFilesystem() may expose internal representation by returning ExcelExtractor._wb  At ExcelExtractor.java:[line 434]
    Log: M V EI: org.apache.poi.hssf.extractor.ExcelExtractor.getDocument() may expose internal representation by returning ExcelExtractor._wb  At ExcelExtractor.java:[line 419]
    Log: M V EI2: new org.apache.poi.hssf.extractor.ExcelExtractor(HSSFWorkbook) may expose internal representation by storing an externally mutable object into ExcelExtractor._wb  At ExcelExtractor.java:[line 67]
    Log: M B Nm: The class name org.apache.poi.hssf.extractor.ExcelExtractor shadows the simple name of implemented interface org.apache.poi.ss.extractor.ExcelExtractor  At ExcelExtractor.java:[lines 56-434]
    Log: M V EI: org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor.getDocument() may expose internal representation by returning HPSFPropertiesExtractor.document  At HPSFPropertiesExtractor.java:[line 144]
    Log: M V EI: org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor.getFilesystem() may expose internal representation by returning HPSFPropertiesExtractor.document  At HPSFPropertiesExtractor.java:[line 159]
    Log: M V EI2: new org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor(POIDocument) may expose internal representation by storing an externally mutable object into HPSFPropertiesExtractor.document  At HPSFPropertiesExtractor.java:[line 46]
    Log: M V EI2: new org.apache.poi.ss.usermodel.RangeCopier(Sheet, Sheet) may expose internal representation by storing an externally mutable object into RangeCopier.destSheet  At RangeCopier.java:[line 38]
    Log: M V EI2: new org.apache.poi.ss.usermodel.RangeCopier(Sheet, Sheet) may expose internal representation by storing an externally mutable object into RangeCopier.sourceSheet  At RangeCopier.java:[line 37]
    Log: M V EI2: org.apache.poi.hssf.record.OldSheetRecord.setCodePage(CodepageRecord) may expose internal representation by storing an externally mutable object into OldSheetRecord.codepage  At OldSheetRecord.java:[line 70]
    Log: M M DC: Possible double-check on org.apache.poi.ss.format.CellDateFormatter.SIMPLE_DATE_FORMATTER in org.apache.poi.ss.format.CellDateFormatter.simpleValue(StringBuffer, Object)  At CellDateFormatter.java:[lines 246-249]
    Log: M V EI2: org.apache.poi.hssf.record.OldLabelRecord.setCodePage(CodepageRecord) may expose internal representation by storing an externally mutable object into OldLabelRecord.codepage  At OldLabelRecord.java:[line 71]
    Log: M V EI: org.apache.poi.ddf.EscherTextboxRecord.getData() may expose internal representation by returning EscherTextboxRecord.thedata  At EscherTextboxRecord.java:[line 107]
    Log: M V EI2: new org.apache.poi.hssf.record.UserSViewEnd(byte[]) may expose internal representation by storing an externally mutable object into UserSViewEnd._rawData  At UserSViewEnd.java:[line 40]
    Log: M V EI: org.apache.poi.common.usermodel.fonts.FontHeader.getPanose() may expose internal representation by returning FontHeader.panose  At FontHeader.java:[line 290]
    Log: M D DLS: Dead store to reserved4 in org.apache.poi.common.usermodel.fonts.FontHeader.init(LittleEndianInput)  At FontHeader.java:[line 174]
    Log: M D DLS: Dead store to reserved3 in org.apache.poi.common.usermodel.fonts.FontHeader.init(LittleEndianInput)  At FontHeader.java:[line 173]
    Log: M D DLS: Dead store to reserved2 in org.apache.poi.common.usermodel.fonts.FontHeader.init(LittleEndianInput)  At FontHeader.java:[line 172]
    Log: M D DLS: Dead store to reserved1 in org.apache.poi.common.usermodel.fonts.FontHeader.init(LittleEndianInput)  At FontHeader.java:[line 171]
    Log: M V EI: org.apache.poi.ddf.EscherClientDataRecord.getRemainingData() may expose internal representation by returning EscherClientDataRecord.remainingData  At EscherClientDataRecord.java:[line 114]
    Log: M V EI: org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext.getValidation() may expose internal representation by returning DataValidationEvaluator$DataValidationContext.dv  At DataValidationEvaluator.java:[line 541]
    Log: M V EI2: new org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext(DataValidation, DataValidationEvaluator, CellRangeAddressBase, CellReference) may expose internal representation by storing an externally mutable object into DataValidationEvaluator$DataValidationContext.dve  At DataValidationEvaluator.java:[line 533]
    Log: M V EI2: new org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext(DataValidation, DataValidationEvaluator, CellRangeAddressBase, CellReference) may expose internal representation by storing an externally mutable object into DataValidationEvaluator$DataValidationContext.dv  At DataValidationEvaluator.java:[line 532]
    Log: M V EI: org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext.getRegion() may expose internal representation by returning DataValidationEvaluator$DataValidationContext.region  At DataValidationEvaluator.java:[line 553]
    Log: M V EI2: new org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext(DataValidation, DataValidationEvaluator, CellRangeAddressBase, CellReference) may expose internal representation by storing an externally mutable object into DataValidationEvaluator$DataValidationContext.target  At DataValidationEvaluator.java:[line 535]
    Log: M V EI2: new org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext(DataValidation, DataValidationEvaluator, CellRangeAddressBase, CellReference) may expose internal representation by storing an externally mutable object into DataValidationEvaluator$DataValidationContext.region  At DataValidationEvaluator.java:[line 534]
    Log: M V EI: org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext.getEvaluator() may expose internal representation by returning DataValidationEvaluator$DataValidationContext.dve  At DataValidationEvaluator.java:[line 547]
    Log: M V EI: org.apache.poi.ss.formula.DataValidationEvaluator$DataValidationContext.getTarget() may expose internal representation by returning DataValidationEvaluator$DataValidationContext.target  At DataValidationEvaluator.java:[line 559]
    Log: M V EI2: new org.apache.poi.sl.draw.SLGraphics(GroupShape) may expose internal representation by storing an externally mutable object into SLGraphics._group  At SLGraphics.java:[line 77]
    Log: M V EI: org.apache.poi.sl.draw.SLGraphics.getShapeGroup() may expose internal representation by returning SLGraphics._group  At SLGraphics.java:[line 92]
    Log: M V EI: org.apache.poi.sl.draw.SLGraphics.getRenderingHints() may expose internal representation by returning SLGraphics._hints  At SLGraphics.java:[line 1556]
    Log: M V EI: org.apache.poi.hpsf.Array.getValues() may expose internal representation by returning Array._values  At Array.java:[line 114]
    Log: M V EI2: new org.apache.poi.hssf.usermodel.EscherGraphics2d(EscherGraphics) may expose internal representation by storing an externally mutable object into EscherGraphics2d._escherGraphics  At EscherGraphics2d.java:[line 89]
    Log: M D SF: Switch statement found in org.apache.poi.ss.formula.functions.FinanceFunction.evaluate(double[]) where one case falls through to the next case  At FinanceFunction.java:[lines 98-101]
    Log: M V EI: org.apache.poi.hssf.extractor.EventBasedExcelExtractor.getRoot() may expose internal representation by returning EventBasedExcelExtractor._dir  At EventBasedExcelExtractor.java:[line 292]
    Log: M V EI2: new org.apache.poi.hssf.extractor.EventBasedExcelExtractor(DirectoryNode) may expose internal representation by storing an externally mutable object into EventBasedExcelExtractor._dir  At EventBasedExcelExtractor.java:[line 72]
    Log: M V EI: org.apache.poi.hssf.extractor.EventBasedExcelExtractor.getFilesystem() may expose internal representation by returning EventBasedExcelExtractor.poifs  At EventBasedExcelExtractor.java:[line 282]
    Log: M V EI2: new org.apache.poi.hssf.extractor.EventBasedExcelExtractor(POIFSFileSystem) may expose internal representation by storing an externally mutable object into EventBasedExcelExtractor.poifs  At EventBasedExcelExtractor.java:[line 76]
    Log: M D DLS: Dead store to maxN in org.apache.poi.ss.formula.functions.Sumproduct.evaluateSingleProduct(ValueEval[])  At Sumproduct.java:[line 95]
    Log: M V EI: org.apache.poi.ddf.EscherClientAnchorRecord.getRemainingData() may expose internal representation by returning EscherClientAnchorRecord.remainingData  At EscherClientAnchorRecord.java:[line 368]
    Log: M V EI2: new org.apache.poi.poifs.macros.VBAMacroReader(POIFSFileSystem) may expose internal representation by storing an externally mutable object into VBAMacroReader.fs  At VBAMacroReader.java:[line 100]
    Log: M D DLS: Dead store to ld in org.apache.poi.ss.formula.functions.TimeValue.evaluate(int, int, ValueEval)  At TimeValue.java:[line 68]
    Log: M V EI2: new org.apache.poi.ss.util.cellwalk.CellWalk(Sheet, CellRangeAddress) may expose internal representation by storing an externally mutable object into CellWalk.sheet  At CellWalk.java:[line 37]
    Log: M V EI2: new org.apache.poi.ss.util.cellwalk.CellWalk(Sheet, CellRangeAddress) may expose internal representation by storing an externally mutable object into CellWalk.range  At CellWalk.java:[line 38]
    Log: M V EI2: new org.apache.poi.poifs.crypt.DataSpaceMapUtils$IRMDSTransformInfo(DataSpaceMapUtils$TransformInfoHeader, int, String) may expose internal representation by storing an externally mutable object into DataSpaceMapUtils$IRMDSTransformInfo.transformInfoHeader  At DataSpaceMapUtils.java:[line 180]
    Log: M V EI: org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder$SheetRecordCollectingListener.getSSTRecord() may expose internal representation by returning EventWorkbookBuilder$SheetRecordCollectingListener.sstRecord  At EventWorkbookBuilder.java:[line 133]
    Log: M V EI2: org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder$SheetRecordCollectingListener.processRecordInternally(Record) may expose internal representation by storing an externally mutable object into EventWorkbookBuilder$SheetRecordCollectingListener.sstRecord  At EventWorkbookBuilder.java:[line 181]
    Log: M V EI: org.apache.poi.sl.image.ImageHeaderEMF.getBounds() may expose internal representation by returning ImageHeaderEMF.deviceBounds  At ImageHeaderEMF.java:[line 67]
    Log: M D SF: Switch statement found in org.apache.poi.ss.formula.functions.Offset.evaluate(ValueEval[], int, int) where one case falls through to the next case  At Offset.java:[lines 172-176]
    Log: M D SF: Switch statement found in org.apache.poi.ss.formula.atp.YearFrac.evaluate(ValueEval[], OperationEvaluationContext) where one case falls through to the next case  At YearFrac.java:[lines 71-74]
    Log: M V EI: org.apache.poi.hssf.record.FeatRecord.getCellRefs() may expose internal representation by returning FeatRecord.cellRefs  At FeatRecord.java:[line 156]
    Log: M V EI2: org.apache.poi.hssf.record.FeatRecord.setCellRefs(CellRangeAddress[]) may expose internal representation by storing an externally mutable object into FeatRecord.cellRefs  At FeatRecord.java:[line 159]
    Log: M B Nm: The class name org.apache.poi.hssf.usermodel.HeaderFooter shadows the simple name of implemented interface org.apache.poi.ss.usermodel.HeaderFooter  At HeaderFooter.java:[lines 26-310]
    Log: M V EI2: new org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor$BinaryRC4CipherOutputStream(BinaryRC4Encryptor, OutputStream) may expose internal representation by storing an externally mutable object into BinaryRC4Encryptor$BinaryRC4CipherOutputStream.this$0  At BinaryRC4Encryptor.java:[line 130]
    Log: M V EI2: new org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor$BinaryRC4CipherOutputStream(BinaryRC4Encryptor, DirectoryNode) may expose internal representation by storing an externally mutable object into BinaryRC4Encryptor$BinaryRC4CipherOutputStream.this$0  At BinaryRC4Encryptor.java:[line 135]
    Log: M V EI: org.apache.poi.ddf.UnknownEscherRecord.getData() may expose internal representation by returning UnknownEscherRecord.thedata  At UnknownEscherRecord.java:[line 129]
    Log: M V EI: org.apache.poi.ddf.UnknownEscherRecord.getChildRecords() may expose internal representation by returning UnknownEscherRecord._childRecords  At UnknownEscherRecord.java:[line 139]
    Log: M P UrF: Unread field: org.apache.poi.hpsf.Decimal.field_5_lo64  At Decimal.java:[line 38]
    Log: M P UrF: Unread field: org.apache.poi.hpsf.Decimal.field_2_scale  At Decimal.java:[line 35]
    Log: M P SS: Unread field: org.apache.poi.ss.formula.ptg.UnknownPtg.size; should this field be static?  At UnknownPtg.java:[line 25]
    Log: M P UrF: Unread field: org.apache.poi.hssf.usermodel.HSSFChart.chartTitleFormat  At HSSFChart.java:[line 217]
    Log: M P UrF: Unread field: org.apache.poi.ss.formula.atp.TextJoinFunction.evaluator  At TextJoinFunction.java:[line 51]
    Log: M P UrF: Unread field: org.apache.poi.hpsf.Decimal.field_4_hi32  At Decimal.java:[line 37]
    Log: M P UrF: Unread field: org.apache.poi.ss.formula.atp.PercentRankIncFunction.evaluator  At PercentRankIncFunction.java:[line 51]
    Log: M P UrF: Unread field: org.apache.poi.hpsf.Decimal.field_1_wReserved  At Decimal.java:[line 34]
    Log: M P UrF: Unread field: org.apache.poi.ss.formula.atp.PercentRankExcFunction.evaluator  At PercentRankExcFunction.java:[line 54]
    Log: M P UrF: Unread field: org.apache.poi.hpsf.Decimal.field_3_sign  At Decimal.java:[line 36]
    Log: M V MS: org.apache.poi.hpsf.VariantSupport.SUPPORTED_TYPES should be package protected  At VariantSupport.java:[line 55]
    Log: M V MS: org.apache.poi.hpsf.DocumentSummaryInformation.FORMAT_ID should be package protected  At DocumentSummaryInformation.java:[line 51]
    Log: M V MS: org.apache.poi.ss.formula.eval.FunctionEval.functions should be package protected  At FunctionEval.java:[line 59]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.poifs.filesystem.DocumentInputStream._current_block_count; locked 71% of time  Unsynchronized access at DocumentInputStream.java:[line 287]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.ss.format.CellDateFormatter.sFmt; locked 66% of time  Unsynchronized access at CellDateFormatter.java:[line 109]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.ss.format.CellDateFormatter.amPmUpper; locked 50% of time  Unsynchronized access at CellDateFormatter.java:[line 122]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.poifs.filesystem.DocumentInputStream._buffer; locked 50% of time  Unsynchronized access at DocumentInputStream.java:[line 286]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.hpsf.ClassIDPredefined.classId; locked 66% of time  Unsynchronized access at ClassIDPredefined.java:[line 132]
    Log: M M IS: Inconsistent synchronization of org.apache.poi.poifs.filesystem.DocumentInputStream._data; locked 80% of time  Unsynchronized access at DocumentInputStream.java:[line 288]
    Log: SpotBugs ended with exit code 1
    Log: > Task :poi:test
    Log: > Task :poi:test
    Log: 6947 tests completed, 1 failed, 30 skipped
    Log: > Task :poi:test FAILED
    Log: FAILURE: Build failed with an exception.
    Log: * What went wrong:
    Log: Execution failed for task ':poi:test'.
    Log: > There were failing tests. See the report at: file:///home/centic/poi-benchmark/sources/poi/build/reports/tests/test/index.html
    Log: * Try:
    Log: > Run with --stacktrace option to get the stack trace.
    Log: > Run with --info or --debug option to get more log output.
    Log: > Run with --scan to get full insights.
    Log: * Get more help at https://help.gradle.org
    Log: BUILD FAILED in 53s
    Log: 11 actionable tasks: 4 executed, 7 up-to-date
	at org.apache.poi.benchmark.suite.BaseBenchmark.runGradleTarget(BaseBenchmark.java:260)
	at org.apache.poi.benchmark.suite.BaseBenchmark.testMain(BaseBenchmark.java:217)
	at org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestMain(TestBenchmarks.java:18)
	at org.apache.poi.benchmark.suite.jmh_generated.TestBenchmarks_benchmarkTestMain_jmhTest.benchmarkTestMain_ss_jmhStub(TestBenchmarks_benchmarkTestMain_jmhTest.java:320)
	at org.apache.poi.benchmark.suite.jmh_generated.TestBenchmarks_benchmarkTestMain_jmhTest.benchmarkTestMain_SingleShotTime(TestBenchmarks_benchmarkTestMain_jmhTest.java:299)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.apache.commons.exec.ExecuteException: While executing (sources); bash ./gradlew :poi:check (Exit value: 1. Caused by org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1))
	at org.dstadler.commons.exec.ExecutionHelper.execute(ExecutionHelper.java:156)
	at org.dstadler.commons.exec.ExecutionHelper.getCommandResultIntoStream(ExecutionHelper.java:130)
	at org.apache.poi.benchmark.suite.BaseBenchmark.runGradleTarget(BaseBenchmark.java:256)
	... 16 more
Caused by: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)
	at org.apache.commons.exec.DefaultExecutor.executeInternal(DefaultExecutor.java:404)
	at org.apache.commons.exec.DefaultExecutor.execute(DefaultExecutor.java:166)
	at org.dstadler.commons.exec.ExecutionHelper.execute(ExecutionHelper.java:151)
	... 18 more


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestOOXML

# Run progress: 70.00% complete, ETA 00:03:06
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 81728.404 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestOOXMLLite

# Run progress: 80.00% complete, ETA 00:02:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 3878.458 ms/op


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
# VM options: -Xmx8m
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestScratchpad

# Run progress: 90.00% complete, ETA 00:00:59
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
Iteration   1: 33665.971 ms/op


# Run complete. Total time: 00:09:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          Mode  Cnt       Score   Error  Units
BuildBenchmarks.benchmarkCompileAll                  ss        41963.604          ms/op
SSPerformanceBenchmarks.benchmarkHSSFPerformance     ss          748.163          ms/op
SSPerformanceBenchmarks.benchmarkSXSSFPerformance    ss         1530.433          ms/op
SSPerformanceBenchmarks.benchmarkXSSFPerformance     ss         3035.543          ms/op
TestBenchmarks.benchmarkTestExcelant                 ss        10451.947          ms/op
TestBenchmarks.benchmarkTestIntegration              ss       274797.749          ms/op
TestBenchmarks.benchmarkTestOOXML                    ss        81728.404          ms/op
TestBenchmarks.benchmarkTestOOXMLLite                ss         3878.458          ms/op
TestBenchmarks.benchmarkTestScratchpad               ss        33665.971          ms/op

Benchmark result is saved to build/reports/jmh/results.json
